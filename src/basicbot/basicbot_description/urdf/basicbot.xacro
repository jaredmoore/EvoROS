<?xml version ="1.0"?>
<robot name="basicbot" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Constants for robot dimensions -->
  <xacro:property name="PI" value="3.1415926535897931"/>
  
  <!-- Chassis (Cylinder) -->
  <xacro:property name="base_link_mass" value="1"/>
  <xacro:property name="base_link_radius" value="1"/>
  <xacro:property name="base_link_height" value="0.5"/>
  <xacro:property name="chassis_lift_percentage" value="0.25"/> <!-- How much to lift chassis as prop of wheel radius. -->

  <!-- Wheels (Cylinder) -->
  <xacro:property name="wheel_mass" value="0.3"/>
  <xacro:property name="wheel_radius" value="0.25"/>
  <xacro:property name="wheel_width" value="0.1"/>
  <xacro:property name="wheel_vert_offset" value="${wheel_radius}"/>

  <!-- Casters (Spheres) -->
  <xacro:property name="caster_mass" value="0.1"/>
  <xacro:property name="caster_radius" value="${wheel_radius*chassis_lift_percentage}"/>

  <!-- Eyes (Spheres) -->
  <xacro:property name="eye_mass" value="0.1"/>
  <xacro:property name="eye_radius" value="${wheel_radius*chassis_lift_percentage}"/>
  
  <!-- vertical shift for entire robot -->
  <xacro:property name="vert_offset" value="${wheel_radius*chassis_lift_percentage+base_link_height/2.0}"/>
  
  <!-- Import all Gazebo customization elements, including colors -->
  <xacro:include filename="$(find basicbot_description)/urdf/basicbot.gazebo"/>

  <!-- Import Rviz colors -->
  <xacro:include filename="$(find basicbot_description)/urdf/materials.xacro"/>

  <!-- Wheel Macro -->
  <xacro:macro name="wheel" params="prefix reflect xmod">
    <link name="${prefix}_wheel" parent="base_link">
      <collision>
        <origin xyz="0 0 0" rpy="0 1.5707 1.5707"/>
        <!--<origin xyz="0 ${reflect*(wheel_width+base_link_radius)} 0" rpy="0 1.5707 1.5707"/>-->
        <geometry>
          <cylinder length="${wheel_width}" radius="${wheel_radius}"/>
        </geometry>
      </collision>
      
      <visual>
        <origin xyz="0 0 0" rpy="0 1.5707 1.5707"/>
        <!--<origin xyz="0 ${reflect*(wheel_width+base_link_radius)} 0" rpy="0 1.5707 1.5707"/>-->
        <geometry>
          <cylinder length="${wheel_width}" radius="${wheel_radius}"/>
        </geometry>
        <material name="black"/> 
      </visual>

      <inertial>
        <origin xyz="0 0 0" rpy="0 1.5707 1.5707"/>
        <!--<origin xyz="0 ${reflect*(wheel_width+base_link_radius)} 0" rpy="0 1.5707 1.5707"/>-->
        <mass value="${wheel_mass}"/>
        <inertia
          ixx="${(wheel_mass/12.0)*(3.0*wheel_radius*wheel_radius + wheel_width*wheel_width)}" ixy="0.0" ixz="0.0" 
          iyy="${(wheel_mass/12.0)*(3.0*wheel_radius*wheel_radius + wheel_width*wheel_width)}" iyz="0.0" 
          izz="${(wheel_mass*wheel_radius*wheel_radius)/2.0}" 
        />
      </inertial>
    </link>

    <joint name="${prefix}_wheel_to_base_link" type="continuous">
      <parent link="base_link"/>
      <child link="${prefix}_wheel"/>
      <limit effort="100" velocity="${PI}"/>
      <axis xyz="0 1 0"/>
      <!--<origin xyz="0 0 0" rpy="0 1.5707 1.5707"/>-->
      <origin xyz="${reflect*(-wheel_width+base_link_radius)} 0 ${wheel_vert_offset}" rpy="0 1.5707 1.5707"/>
    </joint>
  </xacro:macro>

  <!-- Caster Macro -->
  <xacro:macro name="caster" params="prefix reflect xmod">
    <link name="${prefix}_caster" parent="base_link">
      <collision>
        <origin xyz="0 0 0" rpy="0 1.5707 1.5707"/>
        <!--<origin xyz="0 ${reflect*(caster_width+base_link_radius)} 0" rpy="0 1.5707 1.5707"/>-->
        <geometry>
          <sphere radius="${caster_radius}"/>
        </geometry>
      </collision>
      
      <visual>
        <origin xyz="0 0 0" rpy="0 1.5707 1.5707"/>
        <!--<origin xyz="0 ${reflect*(caster_width+base_link_radius)} 0" rpy="0 1.5707 1.5707"/>-->
        <geometry>
          <sphere radius="${caster_radius}"/>
        </geometry>
        <material name="black"/> 
      </visual>

      <inertial>
        <origin xyz="0 0 0" rpy="0 1.5707 1.5707"/>
        <!--<origin xyz="0 ${reflect*(caster_width+base_link_radius)} 0" rpy="0 1.5707 1.5707"/>-->
        <mass value="${caster_mass}"/>
        <inertia
          ixx="${(2.0*caster_mass*caster_radius*caster_radius)/5.0}" ixy="0.0" ixz="0.0" 
          iyy="${(2.0*caster_mass*caster_radius*caster_radius)/5.0}" iyz="0.0" 
          izz="${(2.0*caster_mass*caster_radius*caster_radius)/5.0}" 
        />
      </inertial>
    </link>

    <joint name="${prefix}_caster_to_base_link" type="continuous">
      <parent link="base_link"/>
      <child link="${prefix}_caster"/>
      <!--<origin xyz="0 0 0" rpy="0 1.5707 1.5707"/>-->
      <origin xyz="0 ${reflect*(-caster_radius+base_link_radius)} ${caster_radius}" rpy="0 0 0"/>
      <limit effort="30" velocity="1.0" />
    </joint>
  </xacro:macro>
  
  <!-- Eye Macro -->
  <xacro:macro name="eye" params="prefix reflect">
    <link name="${prefix}_eye" parent="base_link">
      <collision>
        <origin xyz="0 0 0" rpy="0 1.5707 1.5707"/>
        <geometry>
          <sphere radius="${eye_radius}"/>
        </geometry>
      </collision>
      
      <visual>
        <origin xyz="0 0 0" rpy="0 1.5707 1.5707"/>
        <geometry>
          <sphere radius="${eye_radius}"/>
        </geometry>
        <material name="blue"/> 
      </visual>

      <inertial>
        <origin xyz="0 0 0" rpy="0 1.5707 1.5707"/>
        <mass value="${eye_mass}"/>
        <inertia
          ixx="${(2.0*eye_mass*eye_radius*eye_radius)/5.0}" ixy="0.0" ixz="0.0" 
          iyy="${(2.0*eye_mass*eye_radius*eye_radius)/5.0}" iyz="0.0" 
          izz="${(2.0*eye_mass*eye_radius*eye_radius)/5.0}" 
        />
      </inertial>
    </link>

    <joint name="${prefix}_eye_to_base_link" type="continuous">
      <origin xyz="${reflect*(-eye_radius+base_link_radius)} 0 ${eye_radius+base_link_height}" rpy="0 0 0"/>
      <parent link="base_link"/>
      <child link="${prefix}_eye"/>
    </joint>
  </xacro:macro>
  
  <!-- Base Link -->
  <link name="base_link">
    <collision>
      <origin xyz = "0 0 ${vert_offset}" rpy="0 0 0"/>
      <geometry>
        <cylinder length="${base_link_height}" radius="${base_link_radius}"/>
      </geometry>
    </collision>
    
    <visual>
      <origin xyz = "0 0 ${vert_offset}" rpy="0 0 0"/>
      <geometry>
        <cylinder length="${base_link_height}" radius="${base_link_radius}"/>
      </geometry>
      <material name="orange"/>
    </visual>
  
    <inertial>
      <origin xyz = "0 0 ${vert_offset}" rpy="0 0 0"/>
      <mass value="${base_link_mass}"/>
      <inertia
        ixx="${(base_link_mass/12.0)*(3.0*base_link_radius*base_link_radius + base_link_height*base_link_height)}" ixy="0.0" ixz="0.0" 
        iyy="${(base_link_mass/12.0)*(3.0*base_link_radius*base_link_radius + base_link_height*base_link_height)}" iyz="0.0" 
        izz="${(base_link_mass*base_link_radius*base_link_radius)/2.0}"/> 
    </inertial>
        <!-- ixx="${(base_link_mass/12.0)*(3.0*base_link_radius*base_link_radius + base_link_height*base_link_height)}" ixy="0.0" ixz="0.0" --> 
        <!-- iyy="${(base_link_mass/12.0)*(3.0*base_link_radius*base_link_radius + base_link_height*base_link_height)}" iyz="0.0" --> 
        <!-- izz="${(base_link_mass*base_link_radius**2)/2.0}"/> --> 
  </link> 
  
  <!-- Wheels -->
  <xacro:wheel prefix="right" reflect="1.0" xmod="-0.75"/>
  <xacro:wheel prefix="left" reflect="-1.0" xmod="-0.75"/>
  
  <!-- Caster -->
  <xacro:caster prefix="front" reflect="1.0" xmod="-0.75"/>
  <xacro:caster prefix="back" reflect="-1.0" xmod="-0.75"/>

  <!-- Eye -->
  <xacro:eye prefix="right" reflect="-1.0"/>
  <xacro:eye prefix="left" reflect="1.0"/>
  
  <link name="base_laser_link">
    <visual>
      <geometry>
        <box size="0.01 0.05 0.06" />
      </geometry>
      <material name="Green" />
    </visual>
    <inertial>
      <mass value="0.000001" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0"
        iyy="0.0001" iyz="0.0"
        izz="0.0001" />
    </inertial>
  </link>

  <joint name="laser" type="fixed">
    <origin xyz="0.00 ${base_link_radius} ${base_link_height/2.0}" rpy="0 0 1.5707" />
    <parent link="base_link" />
    <child link="base_laser_link" />
  </joint>

  <gazebo>
    <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
      <legacyMode>true</legacyMode>
      <rosDebugLevel>Error</rosDebugLevel>
      <commandTopic>cmd_vel</commandTopic>
      <leftJoint>left_wheel_to_base_link</leftJoint>
      <rightJoint>right_wheel_to_base_link</rightJoint>
      <robotBaseFrame>base_link</robotBaseFrame>
      <wheelSeparation>${(-wheel_width+base_link_radius)*2.0}</wheelSeparation>
      <wheelDiameter>${wheel_radius*2.0}</wheelDiameter>
      <publishWheelJointState>true</publishWheelJointState>
    </plugin>
  </gazebo>

  <gazebo reference="base_laser_link">
      <sensor name="ray_sensor" type="ray">
        <pose>0.01 0 0.0175 0 -0 0</pose>
        <!--<update_rate>20</update_rate>-->
        <visualize>true</visualize>
        <ray>
          <scan>
            <horizontal>
              <samples>7</samples>
              <resolution>1</resolution>
              <min_angle>-0.6981</min_angle>
              <max_angle>0.6981</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.08</min>
            <max>10</max>
            <resolution>0.01</resolution>
          </range>
        </ray>
        <plugin name="laser_node" filename="libgazebo_ros_laser.so">
           <topicName>/laser_scanner</topicName>
           <frameName>base_laser_link</frameName>
        </plugin>
      </sensor>
  </gazebo>

</robot>
